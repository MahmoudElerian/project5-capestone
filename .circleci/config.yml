version: 2.1
orbs:
  kubernetes: circleci/kubernetes@0.4.0
  aws-eks: circleci/aws-eks@1.1.0
jobs:
  build:
    docker:
      - image: python:3.7.3-stretch

    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: install dependencies
          #installing all the dependencies
          command: |
            python3.7 -m venv venv
            . venv/bin/activate
            pip install pylint
            make install
      - save_cache:
          paths: #saving of the cache
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run lint
          command: | #performing the lint tests on both of the docker files (green and blue)
            . venv/bin/activate
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
            make lint
  dockerbuild:
    machine: true
    steps:
      - checkout
      - run:
          name: build docker image
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASSOWRD
            make buildingtheblue
            make buildingthegreen    
  clusteranddeploy:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: yum -y install tar gzip curl wget sudo
      - run:
          name: Install EKSCTL and kubectl
          #installing the required cli
          command: |
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/download/0.63.0/eksctl_Linux_amd64.tar.gz" | tar xz -C /tmp
            mv /tmp/eksctl /usr/local/bin
            wget -q https://storage.googleapis.com/kubernetes-release/release/$(wget -q -O - https://storage.googleapis.com/kubernetes-release/release/stable.txt -O -)/bin/linux/amd64/kubectl -O kubectl
            sudo chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
            sudo chmod +x /usr/local/bin/kubectl
            ls -l /usr/local/bin/kubectl
            pwd
            ls -l
       #Creating the cluster 
      - run:
          name: Create main cluster
          command: |
            eksctl create cluster -f ./AWS-EKS-Config.yml
       #Deploying the blue version
      - run:
          name: Deploy blue 
          command: |
            kubectl apply -f ./blueRepCon.yml
      - run:
          name: Replication Controller check
          command: |
            kubectl describe replicationcontrollers
            kubectl describe services bluegreenlb
       #Deploying the green version
      - run:
          name: Deploy green 
          command: |
            kubectl apply -f ./greenRepCon.yml
      - run:
          name: Replication Controller check
          command: |
            kubectl describe replicationcontrollers
            kubectl describe services bluegreenlb


workflows:
  default:
    jobs:
      - build
      - dockerbuild:
          requires: [build]
      - clusteranddeploy:
          requires: [docker-build-push]